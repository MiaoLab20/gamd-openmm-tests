#!/usr/bin/env python3
"""

This runner is used for running various acceptance tests.  It uses a customized
Runner to add additional post simulation steps.
"""

import argparse

from gamd import gamdSimulation
from gamd import parser
from gamdtests.custom_runners import PostSimulationTestRunner


def main():
    argparser = argparse.ArgumentParser(description=__doc__)
    argparser.add_argument(
        "input_file_type", metavar="INPUT_FILE_TYPE", type=str,
        help="The type of file being provided. Available options are: 'xml', "
             "... More to come later")
    argparser.add_argument(
        "input_file", metavar="INPUT_FILE", type=str,
        help="name of input file for GaMD calculation. only XML format is "
             "currently preferred.")
    argparser.add_argument("-r", "--restart", dest="restart", default=False,
                           help="Restart simulation from backup checkpoint in "
                                "input file", action="store_true")
    argparser.add_argument("-p", "--platform", dest="platform", default="CUDA",
                           help="Define the platform that will run the "
                                "simulations. Default is 'CUDA', but other "
                                "options include: 'reference', 'CPU', and "
                                "'OpenCL'.",
                           type=str)
    argparser.add_argument("-d", "--device_index", dest="device_index",
                           default="0",
                           help="modify which device_index to run the "
                                "simulation on. For example, the number 0 or "
                                "1 would suffice. To run on multiple GPU "
                                "indices, simply enter comma separated "
                                "indices. Example: '0,1'. If a value is not "
                                "supplied, the value '0' will be used by "
                                "default.", type=str)
    argparser.add_argument("-D", "--debug", dest="debug", default=False,
                           help="Whether to start the run in debug mode.",
                           action="store_true")

    args = argparser.parse_args()  # parse the args into a dictionary
    args = vars(args)
    config_file_type = args["input_file_type"]
    config_filename = args["input_file"]
    restart = args["restart"]
    platform = args["platform"]
    cuda_index = args["device_index"]
    debug = args["debug"]

    parserFactory = parser.ParserFactory()
    config = parserFactory.parse_file(config_filename, config_file_type)
    gamdSimulationFactory = gamdSimulation.GamdSimulationFactory()
    gamdSim = gamdSimulationFactory.createGamdSimulation(
        config, platform, cuda_index)
    # If desired, modify OpenMM objects in gamdSimulation object here...

    runner = PostSimulationTestRunner(config, gamdSim, debug)
    runner.run(restart)


if __name__ == "__main__":
    main()
